
" IdeaVim Plugins: https://github.com/JetBrains/ideavim/wiki/IdeaVim-Plugins
Plug 'easymotion/vim-easymotion'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-commentary'
Plug 'preservim/nerdtree'

" Plug 'tommcdo/vim-exchange'

let mapleader = " "

set ignorecase
set smartcase

set showmode

set scrolloff=3

set incsearch
set hlsearch

set number
set relativenumber

"set surround
"set commentary
" set exchange
" set sneak
" set quickscope
"set easymotion

set visualbell

set clipboard+=unnamed

" ctrl key always passed to ideavim for all modes
sethandler a:vim

map Y y$
map K :action QuickJavaDoc<cr>

map <C-d> <C-d>zz
map <C-u> <C-u>zz
" map n nzz
" map N Nzz

" Quit insert mode
inoremap jj <Esc>
inoremap kk <Esc>

" Emacs bindings
inoremap <C-H> <BS>
inoremap <C-D> <Del>
inoremap <C-E> <End>
inoremap <C-A> <Home>
inoremap <C-F> <Right>
inoremap <C-B> <Left>
inoremap <C-P> <Up>
inoremap <C-N> <Down>

noremap <cr> :action EditorSelectWord<cr>
noremap <bs> :action EditorUnSelectWord<cr>

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" mapped to lazyvim
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
map s <Plug>(easymotion-sn)

nnoremap <c-o> :action Back<cr>
nnoremap <c-i> :action Forward<cr>
nnoremap <c-h> <c-w>h
nnoremap <c-l> <c-w>l
nnoremap <c-j> <c-w>j
nnoremap <c-k> <c-w>k

nnoremap gd :action GotoDeclaration<cr>
nnoremap gr :action FindUsages<cr>
nnoremap gI :action GotoImplementation<cr>
" nnoremap gI :action ReSharperGotoImplementation<cr>

" nnoremap H :bprevious<cr>
" nnoremap L :bnext<cr>
nnoremap H gT
nnoremap L gt

nnoremap ]h :action VcsShowNextChangeMarker<cr>
nnoremap [h :action VcsShowPrevChangeMarker<cr>
nnoremap [m :action MethodUp<cr>
nnoremap ]m :action MethodDown<cr>
nnoremap ]e :action GotoNextError<cr>
nnoremap [e :action GotoPreviousError<cr>

" todo
" nnoremap <leader><leader> :action GotoFile<cr>

" live grep
nnoremap <leader>/ :action FindInPath<cr>
nnoremap <leader>, :action RecentFiles<cr>
nnoremap <leader>` <c-tab>

nnoremap <leader><tab>[ :action PreviousTab<cr>
nnoremap <leader><tab>] :action NextTab<cr>

nnoremap <leader>bd :action CloseContent<cr>
nnoremap <leader>bp :action PinActiveEditorTab<cr>
nnoremap <leader>bP :action CloseAllUnpinnedEditors<cr>

noremap <leader>cf :action ReformatCode<cr>
nnoremap <leader>cr :action RenameElement<cr>

nnoremap <leader>dC :action RunToCursor<cr>
nnoremap <leader>dp :action Pause<cr>
nnoremap <leader>dc :action Play<cr>
nnoremap <leader>dt :action Stop<cr>

" not an exact match
nnoremap <leader>dl :action RiderUnitTestRepeatPreviousRunAction<cr>
nnoremap <leader>db :action ToggleLineBreakpoint<cr>

nnoremap <leader>td :action RiderUnitTestDebugContextAction<cr>
nnoremap <leader>tr :action RiderUnitTestRunContextSplitAction<cr>
nnoremap <leader>tS :action RiderUnitTestSessionAbortAction<cr>

nnoremap <leader><space> :action GotoFile<cr>
nnoremap <leader>ff :action GotoFile<cr>
" add new file to directory of current file
nnoremap <leader>fn :action NewElementSamePlace<cr>
nnoremap <leader>fr :action RecentFiles<cr>

nnoremap <leader>ss :action FileStructurePopup<cr>

nnoremap <leader>ur :nohl<cr>

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

map ,f <Plug>(easymotion-f)
map ,F <Plug>(easymotion-F)
map ,t <Plug>(easymotion-t)
map ,T <Plug>(easymotion-T)
map ,/ <Plug>(easymotion-sn)
" map ,s <Plug>(easymotion-f2)
" map ,S <Plug>(easymotion-F2)

" map ,y "+y
" map ,p "+p

" nnoremap ,<esc> :nohl<cr>
nnoremap <esc><esc> :nohl<cr>

nnoremap <leader>m :action MaximizeEditorInSplit<cr>
nnoremap <leader>z :action ToggleDistractionFreeMode<cr>
nnoremap <leader>Z :action ToggleZenMode<cr>
nnoremap <leader>w :action HideAllWindows<cr>
nnoremap <leader><esc> :action JumpToLastWindow<cr>
nnoremap <leader>' :action MoveEditorToOppositeTabGroup<cr>

" noremap gc :action CommentByLineComment<cr>
nnoremap gs :action GotoSymbol<cr>
nnoremap ga :action GotoAction<cr>
nnoremap gh :action ShowErrorDescription<cr>
" nnoremap g; :action JumpToLastChange<cr>
" nnoremap g, :action JumpToNextChange<cr>

" nnoremap <leader>fb :action ShowBookmarks<cr>
" nnoremap <leader>fc :action GotoClass<cr>
" nnoremap <leader>ft :action GotoTest<cr>
" nnoremap <leader>fl :action RecentLocations<cr>

nnoremap <leader>gx :action CloseAllEditors<cr>
nnoremap <leader>go :action CloseAllEditorsButActive<cr>
" nnoremap <leader>gu :action LocalHistory.ShowHistory<cr>

" git blame
" nnoremap <leader>gb :action Annotate<cr>
nnoremap <leader>gh :action Refactorings.QuickListPopupAction<cr>

nnoremap <leader>ic :source ~/.ideavimrc<cr>
" nnoremap <leader>iw :action EditSourceInNewWindow<cr>
nnoremap <leader>ia :action VimFindActionIdAction<cr>
" nnoremap <leader>im :action ToggleBookmark<cr>
nnoremap <leader>id :action RestartIde<cr>
" change theme
nnoremap <leader>it :action ChangeLaf<cr>
" toggle navbar
" nnoremap <leader>in :action ViewObsoleteNavBarAction<cr>
" nnoremap <leader>ib :action ViewToolButtons<cr>
" reload file from disk
nnoremap <leader>ir :action SynchronizeCurrentFile<cr>
" nnoremap <leader>iv :action ActivateUnitTestsCoverageToolWindow<cr>
" nnoremap <leader>iu :action ActivateUnitTestsToolWindow<cr>
" nnoremap <leader>io :action RiderManageRecentProjects<cr>

"debug / run namespace
noremap \e :action QuickEvaluateExpression<cr>
noremap \E :action EvaluateExpression<cr>

nnoremap \c :action RunToCursor<cr>
nnoremap \C :action ForceRunToCursor<cr>
nnoremap \. :action ShowExecutionPoint<cr>
nnoremap \p :action Pause<cr>
nnoremap \P :action Play<cr>
nnoremap \q :action Stop<cr>
nnoremap \d :action RiderUnitTestDebugContextAction<cr>
nnoremap \D :action Debug<cr>
nnoremap \r :action RiderUnitTestRepeatPreviousRunAction<cr>
nnoremap \R :action Run<cr>
nnoremap \b :action ToggleLineBreakpoint<cr>
nnoremap \t :action RiderUnitTestRunContextSplitAction<cr>
" maps to just 2 backslashes - I guess when it's just one it doesn't escape
" but when its 2 it does so you need 4???
nnoremap \\\\x :action Debugger.RemoveAllBreakpoints<cr>
nnoremap \\\\m :action XDebugger.MuteBreakpoints<cr>
nnoremap \\\\b :action BuildWholeSolutionAction<cr>
nnoremap \\\\B :action RebuildSolutionAction<cr>
nnoremap \\\\r :action Rerun<cr>


" nnoremap [m :tabm-1<cr>
" nnoremap ]m :tabm+1<cr>
" nnoremap [b :bprevious<cr>
" nnoremap ]b :bnext<cr>
" https://vim.fandom.com/wiki/Quickly_adding_and_deleting_empty_lines
" context mark doesn't work in ideavim so use z
" nnoremap ]<space> mzo<esc>`z
" nnoremap [<space> mzO<esc>`z
" nnoremap [d mz:-d<cr>`z
" nnoremap ]d mz:+d<cr>`z

" preservim/nerdtree
nnoremap <leader>e :NERDTree<CR>
