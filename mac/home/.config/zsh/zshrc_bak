# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="/Users/richard/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
# ZSH_THEME="robbyrussell"
# ZSH_THEME="agnoster"
ZSH_THEME="powerlevel10k/powerlevel10k"
DEFAULT_USER="richard"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.

# 安装插件
# 注意：zsh-syntax-highlighting 语法高亮插件放在后面
# git clone https://github.com/zsh-users/zsh-syntax-highlighting.git $ZSH_CUSTOM/plugins/zsh-syntax-highlighting
# git clone https://github.com/zsh-users/zsh-autosuggestions.git $ZSH_CUSTOM/plugins/zsh-autosuggestions
# git clone https://github.com/zsh-users/zsh-history-substring-search.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-history-substring-search
# git clone https://github.com/zsh-users/zsh-completions.git ${ZSH_CUSTOM:=~/.oh-my-zsh/custom}/plugins/zsh-completions

# 安装powerlevel10k 主题
# git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k

plugins=(
  z
  git
  node
  npm
  docker
  extract
  zsh-autosuggestions
  zsh-history-substring-search
  zsh-completions
  zsh-syntax-highlighting
)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# 设置语言环境 B
# https://www.tecmint.com/set-system-locales-in-linux/
# 要查看有关当前安装的语言环境的信息，请使用locale或localectl命令。
# 要显示所有可用语言环境的列表，请使用 `locale -a` 命令。
# 查看时间和日期格式 请使用 `locale -k LC_TIME`。

# LANG="zh_CN.UTF-8"
# LC_COLLATE="zh_CN.UTF-8"
# LC_CTYPE="zh_CN.UTF-8"
# LC_MESSAGES="zh_CN.UTF-8"
# LC_MONETARY="zh_CN.UTF-8"
# LC_NUMERIC="zh_CN.UTF-8"
# LC_TIME="zh_CN.UTF-8"
# LC_ALL=

export LANG=zh_CN.UTF-8
# export LANGUAGE=zh_CN.UTF-8
# 设置语言环境 E


# p10k B
# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
# p10k E

# fzf B
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
# fzf E

# zoxide B
# --cmd j 修改别名 z 为 j
eval "$(zoxide init zsh --cmd j)"
# zoxide E

# nvm B
export NVM_DIR="$HOME/.nvm"
[ -s "/opt/homebrew/opt/nvm/nvm.sh" ] && . "/opt/homebrew/opt/nvm/nvm.sh"  # This loads nvm
[ -s "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm" ] && . "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm"  # This loads nvm bash_completion
# nvm E

# sdkman B
#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="/Users/richard/.sdkman"
[[ -s "/Users/richard/.sdkman/bin/sdkman-init.sh" ]] && source "/Users/richard/.sdkman/bin/sdkman-init.sh"
# sdkman E

# conda B
# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/Users/richard/miniconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/Users/richard/miniconda3/etc/profile.d/conda.sh" ]; then
        . "/Users/richard/miniconda3/etc/profile.d/conda.sh"
    else
        export PATH="/Users/richard/miniconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

# 设置别名
alias condaup="conda activate dev"
alias condadown="conda deactivate"

# 自动激活 dev 环境
conda activate dev
# conda E

# the fuck B
eval $(thefuck --alias)
# the fuck E

# mcfly B
# 现在使用 fzf ctl-r
# eval "$(mcfly init zsh)"
# mcfly E

# asdf B
# echo -e "\n. $(brew --prefix asdf)/libexec/asdf.sh" >> ${ZDOTDIR:-~}/.zshrc
. /opt/homebrew/opt/asdf/libexec/asdf.sh
# asdf E

# tmux B
export EDITOR="vim"
# tmux E

# android B
export ANDROID_HOME=$HOME/Library/Android/sdk
export PATH=$PATH:$ANDROID_HOME/tools
export PATH=$PATH:$ANDROID_HOME/tools/bin
export PATH=$PATH:$ANDROID_HOME/platform-tools
export PATH=$PATH:$ANDROID_HOME/emulator
# android E

# flutter B
export PUB_HOSTED_URL=https://pub.flutter-io.cn
export FLUTTER_STORAGE_BASE_URL=https://storage.flutter-io.cn
export FLUTTER_HOME=$HOME/workspace/software/flutter/flutter
export PATH="$PATH:$FLUTTER_HOME/bin"
# flutter E

# idea maven B
# la /Applications/IntelliJ\ IDEA.app/Contents/plugins/maven/lib/maven3/bin
# chmod +x /Applications/IntelliJ\ IDEA.app/Contents/plugins/maven/lib/maven3/bin/mvn
export IDEA_MAVEN_HOME=/Applications/IntelliJ\ IDEA.app/Contents/plugins/maven/lib/maven3
export PATH="$PATH:$IDEA_MAVEN_HOME/bin"
# idea maven E

# spring boot B
# export MAVEN_OPTS=-Djava.security.egd=file:/dev/urandom
export MAVEN_OPTS=-Djava.security.egd=file:/dev/./urandom
# spring boot E

# Smart Project B
export MYSQL_URL=192.168.2.202
export REDIS_URL=192.168.2.202
export SMART_GATEWAY=127.0.0.1
export SMART_ADMIN=127.0.0.1
export NACOS_URL=192.168.2.202
export SMART_TX_MANAGER=127.0.0.1
export MONGO_URL=192.168.2.202
# Smart Project E

# selenium B
export SELENIUM_DRIVER_HOME=$HOME/workspace/software/selenium_driver
export PATH=$PATH:$SELENIUM_DRIVER_HOME/
# selenium E

# openjdk B
# export PATH="/opt/homebrew/opt/openjdk/bin:$PATH"
# openjdk E

# proxy B
# export http_proxy=http://127.0.0.1:1087;export https_proxy=http://127.0.0.1:1087;export ALL_PROXY=socks5://127.0.0.1:1080;
alias proxyon='export http_proxy=127.0.0.1:1087;export https_proxy=$http_proxy;export all_proxy=socks5://127.0.0.1:1080'
alias proxyoff='unset http_proxy;unset https_proxy;unset all_proxy'
#alias proxy='export all_proxy=socks5://127.0.0.1:1080'
#alias unproxy='unset all_proxy'
# proxy E

# hstr B
# HSTR configuration - add this to ~/.zshrc
# alias hh=hstr                    # hh to be alias for hstr
# setopt histignorespace           # skip cmds w/ leading space from history
# export HSTR_CONFIG=hicolor       # get more colors
# bindkey -s "\C-r" "\C-a hstr -- \C-j"     # bind hstr to Ctrl-r (for Vi mode check doc)
# hstr E

# alias B
# alias vim="nvim"
alias cdw="cd ~/workspace"
alias rm="bash ~/bin/safermformac.sh"
alias readlink=greadlink
alias cat=bat
# docker run --rm -it -v \/var/run/docker.sock:/var/run/docker.sock \-v ~/.config/lazydocker:/.config/jesseduffield/lazydocker \lazyteam/lazydocker
alias lzd='docker run --rm -it -v /var/run/docker.sock:/var/run/docker.sock -v ~/.config/lazydocker:/.config/jesseduffield/lazydocker lazyteam/lazydocker'
# alias ls='exa'
# alias ll='exa -lh'
alias la='exa -la'
alias lt='exa -T -L 1'
alias lg='lazygit'
alias rr='ranger'
# alias lzd='lazydocker'
alias man='tldr'
alias zj="zellij"

if [ "$(command -v exa)" ]; then
    unalias -m 'll'
    unalias -m 'l'
    unalias -m 'ls'
    alias ls='exa -G  --color auto --icons -a -s type'
    alias ll='exa -l --color always --icons -a -s type'
fi

# alias E

# python B
#alias python="/opt/homebrew/bin/python3"
#alias pip="/opt/homebrew/bin/pip3"
# alias python2="/System/Library/Frameworks/Python.framework/Versions/2.7/bin/python2.7"
#alias python2="/usr/bin/python2"
#alias pip2="/usr/local/bin/pip2"
#alias python38="/opt/homebrew/opt/python@3.8/bin/python3"
#alias pip38="/opt/homebrew/opt/python@3.8/bin/pip3"
# alias python="/usr/local/bin/python3"
# python E
#
